// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: ncwW2Qgif2pGwQDF81hXqa
// Component: ixjtBzCd3xbW
import * as React from "react";
import { useRouter } from "next/router";
import {
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  Stack as Stack__,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  hasVariant,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator
} from "@plasmicapp/react-web";
import { useDataEnv } from "@plasmicapp/react-web/lib/host";
import { useScreenVariants as useScreenVariants_2BvNreuf1Eto } from "./PlasmicGlobalVariant__DesktopBase"; // plasmic-import: 2BVNreuf1ETO/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: ncwW2Qgif2pGwQDF81hXqa/projectcss
import sty from "./PlasmicFlipSelection.module.css"; // plasmic-import: ixjtBzCd3xbW/css
import BattleSvgIcon from "./icons/PlasmicIcon__BattleSvg"; // plasmic-import: 7kMW41oBB4-P/icon
import Enter2SvgIcon from "./icons/PlasmicIcon__Enter2Svg"; // plasmic-import: 5pOUfK_S49xW/icon
import GivingSvgIcon from "./icons/PlasmicIcon__GivingSvg"; // plasmic-import: r9YcyL7kd5Cf/icon
import Group6Icon from "./icons/PlasmicIcon__Group6"; // plasmic-import: uejqX4-62Nus/icon
import Group7Icon from "./icons/PlasmicIcon__Group7"; // plasmic-import: NNGB3NLCpOg5/icon
import SpeedSvgIcon from "./icons/PlasmicIcon__SpeedSvg"; // plasmic-import: 9KUvdwonZEOb/icon
import AimSvgIcon from "./icons/PlasmicIcon__AimSvg"; // plasmic-import: 2KABqQfO6o_b/icon
import StopSvgIcon from "./icons/PlasmicIcon__StopSvg"; // plasmic-import: AY226YA6NLsm/icon

createPlasmicElementProxy;

export const PlasmicFlipSelection__VariantProps = new Array(
  "scenario",
  "amount"
);

export const PlasmicFlipSelection__ArgProps = new Array();

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicFlipSelection__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  console.log(variants, overrides, forNode,"PlasmicFlipSelection__RenderFunc")
  const $translator = usePlasmicTranslator?.();
  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );
  const $props = {
    ...args,
    ...variants
  };
  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const currentUser = useCurrentUser?.() || {};
  const stateSpecs = React.useMemo(
    () => [
      {
        path: "scenario",
        type: "private",
        variableType: "variant",
        initFunc: ({ $props, $state, $queries, $ctx }) => $props.scenario
      },
      {
        path: "amount",
        type: "private",
        variableType: "variant",
        initFunc: ({ $props, $state, $queries, $ctx }) => $props.amount
      }
    ],

    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });
  const globalVariants = ensureGlobalVariants({
    desktopBase: useScreenVariants_2BvNreuf1Eto()
  });
  return (
    <Stack__
      as={"div"}
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      hasGap={true}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        plasmic_antd_5_hostless_css.plasmic_tokens,
        plasmic_plasmic_rich_components_css.plasmic_tokens,
        sty.root,
        {
          [sty.rootamount__20000]: hasVariant($state, "amount", "_20000"),
          [sty.rootamount__20000_scenario_airdrop]:
            hasVariant($state, "scenario", "airdrop") &&
            hasVariant($state, "amount", "_20000"),
          [sty.rootamount__20000_scenario_firstAid]:
            hasVariant($state, "scenario", "firstAid") &&
            hasVariant($state, "amount", "_20000"),
          [sty.rootamount__2000]: hasVariant($state, "amount", "_2000"),
          [sty.rootamount__2000_scenario_airdrop]:
            hasVariant($state, "scenario", "airdrop") &&
            hasVariant($state, "amount", "_2000"),
          [sty.rootamount__2000_scenario_firstAid]:
            hasVariant($state, "scenario", "firstAid") &&
            hasVariant($state, "amount", "_2000"),
          [sty.rootamount__200]: hasVariant($state, "amount", "_200"),
          [sty.rootscenario_airdrop]: hasVariant($state, "scenario", "airdrop"),
          [sty.rootscenario_airdrop_amount__200]:
            hasVariant($state, "scenario", "airdrop") &&
            hasVariant($state, "amount", "_200"),
          [sty.rootscenario_firstAid]: hasVariant(
            $state,
            "scenario",
            "firstAid"
          ),
          [sty.rootscenario_firstAid_amount__200]:
            hasVariant($state, "scenario", "firstAid") &&
            hasVariant($state, "amount", "_200"),
          [sty.rootscenario_vehicle]: hasVariant($state, "scenario", "vehicle"),
          [sty.rootscenario_vehicle_amount__20000]:
            hasVariant($state, "scenario", "vehicle") &&
            hasVariant($state, "amount", "_20000"),
          [sty.rootscenario_vehicle_amount__2000]:
            hasVariant($state, "scenario", "vehicle") &&
            hasVariant($state, "amount", "_2000"),
          [sty.rootscenario_vehicle_amount__200]:
            hasVariant($state, "scenario", "vehicle") &&
            hasVariant($state, "amount", "_200")
        }
      )}
    >
      <div
        data-plasmic-name={"desktop1"}
        data-plasmic-override={overrides.desktop1}
        className={classNames(projectcss.all, sty.desktop1)}
      >
        <div
          data-plasmic-name={"choiceBackground2"}
          data-plasmic-override={overrides.choiceBackground2}
          className={classNames(projectcss.all, sty.choiceBackground2)}
        >
          <div
            className={classNames(projectcss.all, sty.freeBox__iJs0G, {
              [sty.freeBoxscenario_airdrop__iJs0GjFXve]: hasVariant(
                $state,
                "scenario",
                "airdrop"
              )
            })}
          >
            <div className={classNames(projectcss.all, sty.freeBox___5GF8F)}>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__lHuL5, {
                  [sty.freeBoxscenario_vehicle__lHuL542Tz4]: hasVariant(
                    $state,
                    "scenario",
                    "vehicle"
                  )
                })}
              >
                <PlasmicIcon__
                  PlasmicIconType={
                    hasVariant($state, "scenario", "firstAid") &&
                    hasVariant($state, "amount", "_20000") &&
                    hasVariant(globalVariants, "desktopBase", "desktopOnly")
                      ? GivingSvgIcon
                      : hasVariant($state, "scenario", "firstAid") &&
                        hasVariant($state, "amount", "_2000") &&
                        hasVariant(globalVariants, "desktopBase", "desktopOnly")
                      ? GivingSvgIcon
                      : hasVariant($state, "scenario", "vehicle") &&
                        hasVariant($state, "amount", "_20000") &&
                        hasVariant(globalVariants, "desktopBase", "desktopOnly")
                      ? Enter2SvgIcon
                      : hasVariant($state, "scenario", "firstAid") &&
                        hasVariant($state, "amount", "_200") &&
                        hasVariant(globalVariants, "desktopBase", "desktopOnly")
                      ? GivingSvgIcon
                      : hasVariant($state, "scenario", "vehicle") &&
                        hasVariant($state, "amount", "_2000") &&
                        hasVariant(globalVariants, "desktopBase", "desktopOnly")
                      ? Enter2SvgIcon
                      : hasVariant($state, "scenario", "vehicle") &&
                        hasVariant($state, "amount", "_200") &&
                        hasVariant(globalVariants, "desktopBase", "desktopOnly")
                      ? Enter2SvgIcon
                      : BattleSvgIcon
                  }
                  className={classNames(projectcss.all, sty.svg__ayVuo, {
                    [sty.svgamount__20000_scenario_firstAid__ayVuOhjwOhPzwPf]:
                      hasVariant($state, "scenario", "firstAid") &&
                      hasVariant($state, "amount", "_20000"),
                    [sty.svgamount__2000_scenario_firstAid__ayVuorStkXPzwPf]:
                      hasVariant($state, "scenario", "firstAid") &&
                      hasVariant($state, "amount", "_2000"),
                    [sty.svgscenario_firstAid__ayVuOpzwPf]: hasVariant(
                      $state,
                      "scenario",
                      "firstAid"
                    ),
                    [sty.svgscenario_firstAid_amount__200__ayVuOpzwPfUjrwj]:
                      hasVariant($state, "scenario", "firstAid") &&
                      hasVariant($state, "amount", "_200"),
                    [sty.svgscenario_vehicle__ayVuo42Tz4]: hasVariant(
                      $state,
                      "scenario",
                      "vehicle"
                    ),
                    [sty.svgscenario_vehicle_amount__20000__ayVuo42Tz4HjwOh]:
                      hasVariant($state, "scenario", "vehicle") &&
                      hasVariant($state, "amount", "_20000"),
                    [sty.svgscenario_vehicle_amount__2000__ayVuo42Tz4RStkX]:
                      hasVariant($state, "scenario", "vehicle") &&
                      hasVariant($state, "amount", "_2000"),
                    [sty.svgscenario_vehicle_amount__200__ayVuo42Tz4Ujrwj]:
                      hasVariant($state, "scenario", "vehicle") &&
                      hasVariant($state, "amount", "_200")
                  })}
                  role={"img"}
                />

                <div
                  data-plasmic-name={"choiceCopy2"}
                  data-plasmic-override={overrides.choiceCopy2}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.choiceCopy2,
                    {
                      [sty.choiceCopy2amount__20000_scenario_firstAid]:
                        hasVariant($state, "scenario", "firstAid") &&
                        hasVariant($state, "amount", "_20000"),
                      [sty.choiceCopy2amount__2000_scenario_firstAid]:
                        hasVariant($state, "scenario", "firstAid") &&
                        hasVariant($state, "amount", "_2000"),
                      [sty.choiceCopy2scenario_firstAid]: hasVariant(
                        $state,
                        "scenario",
                        "firstAid"
                      ),
                      [sty.choiceCopy2scenario_firstAid_amount__200]:
                        hasVariant($state, "scenario", "firstAid") &&
                        hasVariant($state, "amount", "_200"),
                      [sty.choiceCopy2scenario_vehicle]: hasVariant(
                        $state,
                        "scenario",
                        "vehicle"
                      ),
                      [sty.choiceCopy2scenario_vehicle_amount__20000]:
                        hasVariant($state, "scenario", "vehicle") &&
                        hasVariant($state, "amount", "_20000"),
                      [sty.choiceCopy2scenario_vehicle_amount__2000]:
                        hasVariant($state, "scenario", "vehicle") &&
                        hasVariant($state, "amount", "_2000"),
                      [sty.choiceCopy2scenario_vehicle_amount__200]:
                        hasVariant($state, "scenario", "vehicle") &&
                        hasVariant($state, "amount", "_200")
                    }
                  )}
                >
                  <Trans__>
                    {hasVariant($state, "scenario", "firstAid") &&
                    hasVariant($state, "amount", "_20000") &&
                    hasVariant(globalVariants, "desktopBase", "desktopOnly")
                      ? "\u6551\u52a9"
                      : hasVariant($state, "scenario", "firstAid") &&
                        hasVariant($state, "amount", "_2000") &&
                        hasVariant(globalVariants, "desktopBase", "desktopOnly")
                      ? "\u6551\u52a9"
                      : hasVariant($state, "scenario", "vehicle") &&
                        hasVariant($state, "amount", "_20000") &&
                        hasVariant(globalVariants, "desktopBase", "desktopOnly")
                      ? "\u8fdb\u5165"
                      : hasVariant($state, "scenario", "firstAid") &&
                        hasVariant($state, "amount", "_200") &&
                        hasVariant(globalVariants, "desktopBase", "desktopOnly")
                      ? "\u6551\u52a9"
                      : hasVariant($state, "scenario", "vehicle") &&
                        hasVariant($state, "amount", "_2000") &&
                        hasVariant(globalVariants, "desktopBase", "desktopOnly")
                      ? "\u8fdb\u5165"
                      : hasVariant($state, "scenario", "vehicle") &&
                        hasVariant($state, "amount", "_200") &&
                        hasVariant(globalVariants, "desktopBase", "desktopOnly")
                      ? "\u8fdb\u5165"
                      : "\u62a2\u593a"}
                  </Trans__>
                </div>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__y6WGi, {
                  [sty.freeBoxamount__2000_scenario_airdrop__y6WGirStkXJFXve]:
                    hasVariant($state, "scenario", "airdrop") &&
                    hasVariant($state, "amount", "_2000")
                })}
              >
                <div
                  data-plasmic-name={"diamonds7"}
                  data-plasmic-override={overrides.diamonds7}
                  className={classNames(projectcss.all, sty.diamonds7)}
                >
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img___31V7P)}
                    displayHeight={
                      hasVariant(globalVariants, "desktopBase", "desktopOnly")
                        ? "20px"
                        : "12.153px"
                    }
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={
                      hasVariant(globalVariants, "desktopBase", "desktopOnly")
                        ? "20px"
                        : "14px"
                    }
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/free_fire_simulator/images/group5.svg",
                      fullWidth: 14,
                      fullHeight: 12.153,
                      aspectRatio: 1.076923
                    }}
                  />

                  <Group6Icon
                    className={classNames(projectcss.all, sty.svg__l5MhA)}
                    role={"img"}
                  />

                  <Group6Icon
                    className={classNames(projectcss.all, sty.svg__oEkef)}
                    role={"img"}
                  />

                  <Group7Icon
                    className={classNames(projectcss.all, sty.svg__zd4T2)}
                    role={"img"}
                  />
                </div>
                <div
                  data-plasmic-name={"amount7"}
                  data-plasmic-override={overrides.amount7}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.amount7,
                    {
                      [sty.amount7amount__20000_scenario_airdrop]:
                        hasVariant($state, "scenario", "airdrop") &&
                        hasVariant($state, "amount", "_20000"),
                      [sty.amount7amount__20000_scenario_firstAid]:
                        hasVariant($state, "scenario", "firstAid") &&
                        hasVariant($state, "amount", "_20000"),
                      [sty.amount7amount__2000_scenario_airdrop]:
                        hasVariant($state, "scenario", "airdrop") &&
                        hasVariant($state, "amount", "_2000"),
                      [sty.amount7amount__2000_scenario_firstAid]:
                        hasVariant($state, "scenario", "firstAid") &&
                        hasVariant($state, "amount", "_2000"),
                      [sty.amount7scenario_vehicle_amount__20000]:
                        hasVariant($state, "scenario", "vehicle") &&
                        hasVariant($state, "amount", "_20000"),
                      [sty.amount7scenario_vehicle_amount__2000]:
                        hasVariant($state, "scenario", "vehicle") &&
                        hasVariant($state, "amount", "_2000"),
                      [sty.amount7scenario_vehicle_amount__200]:
                        hasVariant($state, "scenario", "vehicle") &&
                        hasVariant($state, "amount", "_200")
                    }
                  )}
                >
                  <Trans__>
                    {hasVariant($state, "scenario", "firstAid") &&
                    hasVariant($state, "amount", "_20000") &&
                    hasVariant(globalVariants, "desktopBase", "desktopOnly")
                      ? "20,000"
                      : hasVariant($state, "scenario", "firstAid") &&
                        hasVariant($state, "amount", "_2000") &&
                        hasVariant(globalVariants, "desktopBase", "desktopOnly")
                      ? "2,000"
                      : hasVariant($state, "scenario", "vehicle") &&
                        hasVariant($state, "amount", "_20000") &&
                        hasVariant(globalVariants, "desktopBase", "desktopOnly")
                      ? "20,000"
                      : hasVariant($state, "scenario", "vehicle") &&
                        hasVariant($state, "amount", "_2000") &&
                        hasVariant(globalVariants, "desktopBase", "desktopOnly")
                      ? "2,000"
                      : hasVariant($state, "scenario", "airdrop") &&
                        hasVariant($state, "amount", "_20000") &&
                        hasVariant(globalVariants, "desktopBase", "desktopOnly")
                      ? "20,000"
                      : hasVariant($state, "scenario", "vehicle") &&
                        hasVariant($state, "amount", "_200") &&
                        hasVariant(globalVariants, "desktopBase", "desktopOnly")
                      ? "200"
                      : hasVariant($state, "scenario", "airdrop") &&
                        hasVariant($state, "amount", "_2000") &&
                        hasVariant(globalVariants, "desktopBase", "desktopOnly")
                      ? "2,000"
                      : "200"}
                  </Trans__>
                </div>
              </Stack__>
            </div>
          </div>
        </div>
      </div>
      <div
        data-plasmic-name={"desktop2"}
        data-plasmic-override={overrides.desktop2}
        className={classNames(projectcss.all, sty.desktop2)}
      >
        <div
          data-plasmic-name={"choiceBackground6"}
          data-plasmic-override={overrides.choiceBackground6}
          className={classNames(projectcss.all, sty.choiceBackground6)}
        >
          <div
            className={classNames(projectcss.all, sty.freeBox__kDqR6, {
              [sty.freeBoxscenario_airdrop__kDqR6JFXve]: hasVariant(
                $state,
                "scenario",
                "airdrop"
              )
            })}
          >
            <div
              className={classNames(projectcss.all, sty.freeBox__p2Tf, {
                [sty.freeBoxamount__2000_scenario_airdrop__p2TfRStkXJFXve]:
                  hasVariant($state, "scenario", "airdrop") &&
                  hasVariant($state, "amount", "_2000")
              })}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__oaNbh)}
              >
                <PlasmicIcon__
                  PlasmicIconType={
                    hasVariant($state, "scenario", "firstAid") &&
                    hasVariant($state, "amount", "_20000") &&
                    hasVariant(globalVariants, "desktopBase", "desktopOnly")
                      ? StopSvgIcon
                      : hasVariant($state, "scenario", "firstAid") &&
                        hasVariant($state, "amount", "_2000") &&
                        hasVariant(globalVariants, "desktopBase", "desktopOnly")
                      ? StopSvgIcon
                      : hasVariant($state, "scenario", "vehicle") &&
                        hasVariant($state, "amount", "_20000") &&
                        hasVariant(globalVariants, "desktopBase", "desktopOnly")
                      ? AimSvgIcon
                      : hasVariant($state, "scenario", "firstAid") &&
                        hasVariant($state, "amount", "_200") &&
                        hasVariant(globalVariants, "desktopBase", "desktopOnly")
                      ? StopSvgIcon
                      : hasVariant($state, "scenario", "vehicle") &&
                        hasVariant($state, "amount", "_2000") &&
                        hasVariant(globalVariants, "desktopBase", "desktopOnly")
                      ? AimSvgIcon
                      : hasVariant($state, "scenario", "vehicle") &&
                        hasVariant($state, "amount", "_200") &&
                        hasVariant(globalVariants, "desktopBase", "desktopOnly")
                      ? AimSvgIcon
                      : hasVariant(globalVariants, "desktopBase", "desktopOnly")
                      ? SpeedSvgIcon
                      : BattleSvgIcon
                  }
                  className={classNames(projectcss.all, sty.svg__l1Vfo, {
                    [sty.svgamount__20000_scenario_firstAid__l1VfohjwOhPzwPf]:
                      hasVariant($state, "scenario", "firstAid") &&
                      hasVariant($state, "amount", "_20000"),
                    [sty.svgamount__2000_scenario_firstAid__l1VfoRStkXPzwPf]:
                      hasVariant($state, "scenario", "firstAid") &&
                      hasVariant($state, "amount", "_2000"),
                    [sty.svgscenario_firstAid__l1VfopzwPf]: hasVariant(
                      $state,
                      "scenario",
                      "firstAid"
                    ),
                    [sty.svgscenario_firstAid_amount__200__l1VfopzwPfUjrwj]:
                      hasVariant($state, "scenario", "firstAid") &&
                      hasVariant($state, "amount", "_200"),
                    [sty.svgscenario_vehicle__l1Vfo42Tz4]: hasVariant(
                      $state,
                      "scenario",
                      "vehicle"
                    ),
                    [sty.svgscenario_vehicle_amount__20000__l1Vfo42Tz4HjwOh]:
                      hasVariant($state, "scenario", "vehicle") &&
                      hasVariant($state, "amount", "_20000"),
                    [sty.svgscenario_vehicle_amount__2000__l1Vfo42Tz4RStkX]:
                      hasVariant($state, "scenario", "vehicle") &&
                      hasVariant($state, "amount", "_2000"),
                    [sty.svgscenario_vehicle_amount__200__l1Vfo42Tz4Ujrwj]:
                      hasVariant($state, "scenario", "vehicle") &&
                      hasVariant($state, "amount", "_200")
                  })}
                  role={"img"}
                />

                <div
                  data-plasmic-name={"choiceCopy6"}
                  data-plasmic-override={overrides.choiceCopy6}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.choiceCopy6,
                    {
                      [sty.choiceCopy6amount__20000_scenario_firstAid]:
                        hasVariant($state, "scenario", "firstAid") &&
                        hasVariant($state, "amount", "_20000"),
                      [sty.choiceCopy6amount__2000_scenario_firstAid]:
                        hasVariant($state, "scenario", "firstAid") &&
                        hasVariant($state, "amount", "_2000"),
                      [sty.choiceCopy6scenario_firstAid]: hasVariant(
                        $state,
                        "scenario",
                        "firstAid"
                      ),
                      [sty.choiceCopy6scenario_firstAid_amount__200]:
                        hasVariant($state, "scenario", "firstAid") &&
                        hasVariant($state, "amount", "_200"),
                      [sty.choiceCopy6scenario_vehicle]: hasVariant(
                        $state,
                        "scenario",
                        "vehicle"
                      ),
                      [sty.choiceCopy6scenario_vehicle_amount__20000]:
                        hasVariant($state, "scenario", "vehicle") &&
                        hasVariant($state, "amount", "_20000"),
                      [sty.choiceCopy6scenario_vehicle_amount__2000]:
                        hasVariant($state, "scenario", "vehicle") &&
                        hasVariant($state, "amount", "_2000"),
                      [sty.choiceCopy6scenario_vehicle_amount__200]:
                        hasVariant($state, "scenario", "vehicle") &&
                        hasVariant($state, "amount", "_200")
                    }
                  )}
                >
                  <Trans__>
                    {hasVariant($state, "scenario", "firstAid") &&
                    hasVariant($state, "amount", "_20000") &&
                    hasVariant(globalVariants, "desktopBase", "desktopOnly")
                      ? "\u653e\u5f03"
                      : hasVariant($state, "scenario", "firstAid") &&
                        hasVariant($state, "amount", "_2000") &&
                        hasVariant(globalVariants, "desktopBase", "desktopOnly")
                      ? "\u653e\u5f03"
                      : hasVariant($state, "scenario", "vehicle") &&
                        hasVariant($state, "amount", "_20000") &&
                        hasVariant(globalVariants, "desktopBase", "desktopOnly")
                      ? "\u6467\u6bc1"
                      : hasVariant($state, "scenario", "firstAid") &&
                        hasVariant($state, "amount", "_200") &&
                        hasVariant(globalVariants, "desktopBase", "desktopOnly")
                      ? "\u653e\u5f03"
                      : hasVariant($state, "scenario", "vehicle") &&
                        hasVariant($state, "amount", "_2000") &&
                        hasVariant(globalVariants, "desktopBase", "desktopOnly")
                      ? "\u6467\u6bc1"
                      : hasVariant($state, "scenario", "vehicle") &&
                        hasVariant($state, "amount", "_200") &&
                        hasVariant(globalVariants, "desktopBase", "desktopOnly")
                      ? "\u6467\u6bc1"
                      : hasVariant(globalVariants, "desktopBase", "desktopOnly")
                      ? "\u9003\u8dd1"
                      : "\u62a2\u593a"}
                  </Trans__>
                </div>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__dyYAr, {
                  [sty.freeBoxscenario_vehicle_amount__200__dyYAr42Tz4Ujrwj]:
                    hasVariant($state, "scenario", "vehicle") &&
                    hasVariant($state, "amount", "_200")
                })}
              >
                <div
                  data-plasmic-name={"diamonds8"}
                  data-plasmic-override={overrides.diamonds8}
                  className={classNames(projectcss.all, sty.diamonds8)}
                >
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__pnmwd)}
                    displayHeight={
                      hasVariant(globalVariants, "desktopBase", "desktopOnly")
                        ? "20px"
                        : "12.153px"
                    }
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={
                      hasVariant(globalVariants, "desktopBase", "desktopOnly")
                        ? "20px"
                        : "14px"
                    }
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/free_fire_simulator/images/group5.svg",
                      fullWidth: 14,
                      fullHeight: 12.153,
                      aspectRatio: 1.076923
                    }}
                  />

                  <Group6Icon
                    className={classNames(projectcss.all, sty.svg___5BdbB)}
                    role={"img"}
                  />

                  <Group6Icon
                    className={classNames(projectcss.all, sty.svg___0Gp09)}
                    role={"img"}
                  />

                  <Group7Icon
                    className={classNames(projectcss.all, sty.svg___4Xctk)}
                    role={"img"}
                  />
                </div>
                <div
                  data-plasmic-name={"amount10"}
                  data-plasmic-override={overrides.amount10}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.amount10,
                    {
                      [sty.amount10amount__20000_scenario_airdrop]:
                        hasVariant($state, "scenario", "airdrop") &&
                        hasVariant($state, "amount", "_20000"),
                      [sty.amount10amount__20000_scenario_firstAid]:
                        hasVariant($state, "scenario", "firstAid") &&
                        hasVariant($state, "amount", "_20000"),
                      [sty.amount10amount__2000_scenario_airdrop]:
                        hasVariant($state, "scenario", "airdrop") &&
                        hasVariant($state, "amount", "_2000"),
                      [sty.amount10amount__2000_scenario_firstAid]:
                        hasVariant($state, "scenario", "firstAid") &&
                        hasVariant($state, "amount", "_2000"),
                      [sty.amount10scenario_vehicle_amount__20000]:
                        hasVariant($state, "scenario", "vehicle") &&
                        hasVariant($state, "amount", "_20000"),
                      [sty.amount10scenario_vehicle_amount__2000]:
                        hasVariant($state, "scenario", "vehicle") &&
                        hasVariant($state, "amount", "_2000"),
                      [sty.amount10scenario_vehicle_amount__200]:
                        hasVariant($state, "scenario", "vehicle") &&
                        hasVariant($state, "amount", "_200")
                    }
                  )}
                >
                  <Trans__>
                    {hasVariant($state, "scenario", "firstAid") &&
                    hasVariant($state, "amount", "_20000") &&
                    hasVariant(globalVariants, "desktopBase", "desktopOnly") ? (
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "#000000" }}
                        >
                          {"20,000"}
                        </span>
                      </React.Fragment>
                    ) : hasVariant($state, "scenario", "firstAid") &&
                      hasVariant($state, "amount", "_2000") &&
                      hasVariant(
                        globalVariants,
                        "desktopBase",
                        "desktopOnly"
                      ) ? (
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "#000000" }}
                        >
                          {"2,000"}
                        </span>
                      </React.Fragment>
                    ) : hasVariant($state, "scenario", "vehicle") &&
                      hasVariant($state, "amount", "_20000") &&
                      hasVariant(
                        globalVariants,
                        "desktopBase",
                        "desktopOnly"
                      ) ? (
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "#000000" }}
                        >
                          {"20,000"}
                        </span>
                      </React.Fragment>
                    ) : hasVariant($state, "scenario", "vehicle") &&
                      hasVariant($state, "amount", "_2000") &&
                      hasVariant(
                        globalVariants,
                        "desktopBase",
                        "desktopOnly"
                      ) ? (
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "#000000" }}
                        >
                          {"2,000"}
                        </span>
                      </React.Fragment>
                    ) : hasVariant($state, "scenario", "airdrop") &&
                      hasVariant($state, "amount", "_20000") &&
                      hasVariant(
                        globalVariants,
                        "desktopBase",
                        "desktopOnly"
                      ) ? (
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "#000000" }}
                        >
                          {"20,000"}
                        </span>
                      </React.Fragment>
                    ) : hasVariant($state, "scenario", "vehicle") &&
                      hasVariant($state, "amount", "_200") &&
                      hasVariant(
                        globalVariants,
                        "desktopBase",
                        "desktopOnly"
                      ) ? (
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "#000000" }}
                        >
                          {"200"}
                        </span>
                      </React.Fragment>
                    ) : hasVariant($state, "scenario", "airdrop") &&
                      hasVariant($state, "amount", "_2000") &&
                      hasVariant(
                        globalVariants,
                        "desktopBase",
                        "desktopOnly"
                      ) ? (
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "#000000" }}
                        >
                          {"2,000"}
                        </span>
                      </React.Fragment>
                    ) : hasVariant(
                        globalVariants,
                        "desktopBase",
                        "desktopOnly"
                      ) ? (
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "#000000" }}
                        >
                          {"200"}
                        </span>
                      </React.Fragment>
                    ) : (
                      "200"
                    )}
                  </Trans__>
                </div>
              </Stack__>
            </div>
          </div>
        </div>
      </div>
      <div
        data-plasmic-name={"mobile1"}
        data-plasmic-override={overrides.mobile1}
        className={classNames(projectcss.all, sty.mobile1, {
          [sty.mobile1scenario_airdrop]: hasVariant(
            $state,
            "scenario",
            "airdrop"
          )
        })}
      >
        <div
          data-plasmic-name={"choiceBackground4"}
          data-plasmic-override={overrides.choiceBackground4}
          className={classNames(projectcss.all, sty.choiceBackground4)}
        >
          <div className={classNames(projectcss.all, sty.freeBox__sLg3X)}>
            <div className={classNames(projectcss.all, sty.freeBox__dcNw)}>
              <PlasmicIcon__
                PlasmicIconType={
                  hasVariant($state, "scenario", "firstAid")
                    ? GivingSvgIcon
                    : hasVariant($state, "scenario", "vehicle")
                    ? Enter2SvgIcon
                    : BattleSvgIcon
                }
                className={classNames(projectcss.all, sty.svg__vm54H, {
                  [sty.svgscenario_airdrop__vm54HjFXve]: hasVariant(
                    $state,
                    "scenario",
                    "airdrop"
                  ),
                  [sty.svgscenario_firstAid__vm54HpzwPf]: hasVariant(
                    $state,
                    "scenario",
                    "firstAid"
                  ),
                  [sty.svgscenario_vehicle__vm54H42Tz4]: hasVariant(
                    $state,
                    "scenario",
                    "vehicle"
                  )
                })}
                role={"img"}
              />

              <div
                data-plasmic-name={"choiceCopy3"}
                data-plasmic-override={overrides.choiceCopy3}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.choiceCopy3,
                  {
                    [sty.choiceCopy3scenario_airdrop]: hasVariant(
                      $state,
                      "scenario",
                      "airdrop"
                    ),
                    [sty.choiceCopy3scenario_firstAid]: hasVariant(
                      $state,
                      "scenario",
                      "firstAid"
                    ),
                    [sty.choiceCopy3scenario_vehicle]: hasVariant(
                      $state,
                      "scenario",
                      "vehicle"
                    )
                  }
                )}
              >
                <Trans__>
                  {hasVariant($state, "scenario", "firstAid")
                    ? "\u6551\u63f4"
                    : hasVariant($state, "scenario", "vehicle")
                    ? "\u8fdb\u5165"
                    : "\u62a2\u593a"}
                </Trans__>
              </div>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__thw6X)}
              >
                <div
                  data-plasmic-name={"diamonds2"}
                  data-plasmic-override={overrides.diamonds2}
                  className={classNames(projectcss.all, sty.diamonds2)}
                >
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__lIFxy, {
                      [sty.imgamount__20000__lIFxyhjwOh]: hasVariant(
                        $state,
                        "amount",
                        "_20000"
                      )
                    })}
                    displayHeight={
                      hasVariant(globalVariants, "desktopBase", "desktopOnly")
                        ? "20px"
                        : "12.153px"
                    }
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={
                      hasVariant(globalVariants, "desktopBase", "desktopOnly")
                        ? "20px"
                        : "14px"
                    }
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/free_fire_simulator/images/group5.svg",
                      fullWidth: 14,
                      fullHeight: 12.153,
                      aspectRatio: 1.076923
                    }}
                  />

                  <Group6Icon
                    className={classNames(projectcss.all, sty.svg__q0Ys1)}
                    role={"img"}
                  />

                  <Group6Icon
                    className={classNames(projectcss.all, sty.svg__mp4TL)}
                    role={"img"}
                  />

                  <Group7Icon
                    className={classNames(projectcss.all, sty.svg__h2YuH)}
                    role={"img"}
                  />
                </div>
                <div
                  data-plasmic-name={"amount2"}
                  data-plasmic-override={overrides.amount2}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.amount2,
                    {
                      [sty.amount2amount__20000]: hasVariant(
                        $state,
                        "amount",
                        "_20000"
                      ),
                      [sty.amount2amount__2000]: hasVariant(
                        $state,
                        "amount",
                        "_2000"
                      )
                    }
                  )}
                >
                  <Trans__>
                    {hasVariant($state, "amount", "_20000")
                      ? "20,000"
                      : hasVariant($state, "amount", "_2000")
                      ? "2,000"
                      : "200"}
                  </Trans__>
                </div>
              </Stack__>
            </div>
          </div>
        </div>
      </div>
      <div
        data-plasmic-name={"mobile2"}
        data-plasmic-override={overrides.mobile2}
        className={classNames(projectcss.all, sty.mobile2)}
      >
        <div
          data-plasmic-name={"choiceBackground3"}
          data-plasmic-override={overrides.choiceBackground3}
          className={classNames(projectcss.all, sty.choiceBackground3)}
        >
          <div className={classNames(projectcss.all, sty.freeBox___57Y5D)}>
            <div className={classNames(projectcss.all, sty.freeBox___6Kit)}>
              <PlasmicIcon__
                PlasmicIconType={
                  hasVariant($state, "scenario", "firstAid")
                    ? StopSvgIcon
                    : hasVariant($state, "scenario", "vehicle")
                    ? AimSvgIcon
                    : SpeedSvgIcon
                }
                className={classNames(projectcss.all, sty.svg__jEuvp, {
                  [sty.svgscenario_firstAid__jEuvppzwPf]: hasVariant(
                    $state,
                    "scenario",
                    "firstAid"
                  ),
                  [sty.svgscenario_vehicle__jEuvp42Tz4]: hasVariant(
                    $state,
                    "scenario",
                    "vehicle"
                  )
                })}
                role={"img"}
              />

              <div
                data-plasmic-name={"choiceCopy4"}
                data-plasmic-override={overrides.choiceCopy4}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.choiceCopy4,
                  {
                    [sty.choiceCopy4scenario_firstAid]: hasVariant(
                      $state,
                      "scenario",
                      "firstAid"
                    ),
                    [sty.choiceCopy4scenario_vehicle]: hasVariant(
                      $state,
                      "scenario",
                      "vehicle"
                    )
                  }
                )}
              >
                <Trans__>
                  {hasVariant($state, "scenario", "firstAid")
                    ? "\u62d2\u7edd"
                    : hasVariant($state, "scenario", "vehicle")
                    ? "\u6467\u6bc1"
                    : "\u9003\u8dd1"}
                </Trans__>
              </div>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__btWr2)}
              >
                <div
                  data-plasmic-name={"diamonds4"}
                  data-plasmic-override={overrides.diamonds4}
                  className={classNames(projectcss.all, sty.diamonds4)}
                >
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__gcPra)}
                    displayHeight={
                      hasVariant(globalVariants, "desktopBase", "desktopOnly")
                        ? "20px"
                        : "12.153px"
                    }
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={
                      hasVariant(globalVariants, "desktopBase", "desktopOnly")
                        ? "20px"
                        : "14px"
                    }
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/free_fire_simulator/images/group5.svg",
                      fullWidth: 14,
                      fullHeight: 12.153,
                      aspectRatio: 1.076923
                    }}
                  />

                  <Group6Icon
                    className={classNames(projectcss.all, sty.svg__axSXq)}
                    role={"img"}
                  />

                  <Group6Icon
                    className={classNames(projectcss.all, sty.svg___6Uh4T)}
                    role={"img"}
                  />

                  <Group7Icon
                    className={classNames(projectcss.all, sty.svg__sVxyb)}
                    role={"img"}
                  />
                </div>
                <div
                  data-plasmic-name={"amount4"}
                  data-plasmic-override={overrides.amount4}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.amount4,
                    {
                      [sty.amount4amount__20000]: hasVariant(
                        $state,
                        "amount",
                        "_20000"
                      ),
                      [sty.amount4amount__2000]: hasVariant(
                        $state,
                        "amount",
                        "_2000"
                      )
                    }
                  )}
                >
                  <Trans__>
                    {hasVariant($state, "amount", "_20000")
                      ? "20,000"
                      : hasVariant($state, "amount", "_2000")
                      ? "2,000"
                      : "200"}
                  </Trans__>
                </div>
              </Stack__>
            </div>
          </div>
        </div>
      </div>
    </Stack__>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "desktop1",
    "choiceBackground2",
    "choiceCopy2",
    "diamonds7",
    "amount7",
    "desktop2",
    "choiceBackground6",
    "choiceCopy6",
    "diamonds8",
    "amount10",
    "mobile1",
    "choiceBackground4",
    "choiceCopy3",
    "diamonds2",
    "amount2",
    "mobile2",
    "choiceBackground3",
    "choiceCopy4",
    "diamonds4",
    "amount4"
  ],

  desktop1: [
    "desktop1",
    "choiceBackground2",
    "choiceCopy2",
    "diamonds7",
    "amount7"
  ],

  choiceBackground2: [
    "choiceBackground2",
    "choiceCopy2",
    "diamonds7",
    "amount7"
  ],

  choiceCopy2: ["choiceCopy2"],
  diamonds7: ["diamonds7"],
  amount7: ["amount7"],
  desktop2: [
    "desktop2",
    "choiceBackground6",
    "choiceCopy6",
    "diamonds8",
    "amount10"
  ],

  choiceBackground6: [
    "choiceBackground6",
    "choiceCopy6",
    "diamonds8",
    "amount10"
  ],

  choiceCopy6: ["choiceCopy6"],
  diamonds8: ["diamonds8"],
  amount10: ["amount10"],
  mobile1: [
    "mobile1",
    "choiceBackground4",
    "choiceCopy3",
    "diamonds2",
    "amount2"
  ],

  choiceBackground4: [
    "choiceBackground4",
    "choiceCopy3",
    "diamonds2",
    "amount2"
  ],

  choiceCopy3: ["choiceCopy3"],
  diamonds2: ["diamonds2"],
  amount2: ["amount2"],
  mobile2: [
    "mobile2",
    "choiceBackground3",
    "choiceCopy4",
    "diamonds4",
    "amount4"
  ],

  choiceBackground3: [
    "choiceBackground3",
    "choiceCopy4",
    "diamonds4",
    "amount4"
  ],

  choiceCopy4: ["choiceCopy4"],
  diamonds4: ["diamonds4"],
  amount4: ["amount4"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicFlipSelection__ArgProps,
          internalVariantPropNames: PlasmicFlipSelection__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicFlipSelection__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicFlipSelection";
  } else {
    func.displayName = `PlasmicFlipSelection.${nodeName}`;
  }
  return func;
}

export const PlasmicFlipSelection = Object.assign(
  // Top-level PlasmicFlipSelection renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    desktop1: makeNodeComponent("desktop1"),
    choiceBackground2: makeNodeComponent("choiceBackground2"),
    choiceCopy2: makeNodeComponent("choiceCopy2"),
    diamonds7: makeNodeComponent("diamonds7"),
    amount7: makeNodeComponent("amount7"),
    desktop2: makeNodeComponent("desktop2"),
    choiceBackground6: makeNodeComponent("choiceBackground6"),
    choiceCopy6: makeNodeComponent("choiceCopy6"),
    diamonds8: makeNodeComponent("diamonds8"),
    amount10: makeNodeComponent("amount10"),
    mobile1: makeNodeComponent("mobile1"),
    choiceBackground4: makeNodeComponent("choiceBackground4"),
    choiceCopy3: makeNodeComponent("choiceCopy3"),
    diamonds2: makeNodeComponent("diamonds2"),
    amount2: makeNodeComponent("amount2"),
    mobile2: makeNodeComponent("mobile2"),
    choiceBackground3: makeNodeComponent("choiceBackground3"),
    choiceCopy4: makeNodeComponent("choiceCopy4"),
    diamonds4: makeNodeComponent("diamonds4"),
    amount4: makeNodeComponent("amount4"),
    // Metadata about props expected for PlasmicFlipSelection
    internalVariantProps: PlasmicFlipSelection__VariantProps,
    internalArgProps: PlasmicFlipSelection__ArgProps
  }
);

export default PlasmicFlipSelection;
/* prettier-ignore-end */
